import math, sys
					
def fSphere(dims, f, inRad=10, outRad=50) :	center = (dims[0]/2,dims[1]/2,dims[2]/2)		for z in range(dims[2]):		for y in range(dims[1]):			for x in range(dims[0]):				dx = abs(center[0] - x)				dy = abs(center[1] - y)				dz = abs(center[2] - z)								cenDist = math.sqrt(dx*dx + dy*dy + dz*dz)								if cenDist <= inRad:					print(1, file=f)				elif cenDist < outRad:					print(1 - ( (cenDist-inRad) / (outRad-inRad) ), file=f)				else:					print(0, file=f)
	def sphere(dims, f, rad=50) :	center = (dims[0]/2,dims[1]/2,dims[2]/2)		for z in range(dims[2]):		for y in range(dims[1]):			for x in range(dims[0]):				dx = abs(center[0] - x)				dy = abs(center[1] - y)				dz = abs(center[2] - z)								cenDist = math.sqrt(dx*dx + dy*dy + dz*dz)								if cenDist < rad:					print(1, file=f)				else:					print(0, file=f)					def ripple(dims, f) :	center = (dims[0]/2,dims[1]/2,dims[2]/2)		for z in range(dims[2]):		for y in range(dims[1]):			for x in range(dims[0]):				dx = abs(center[0] - x)				dy = abs(center[1] - y)				dz = abs(center[2] - z)								val = sin(10(dx**2+dy^2))/10				 				if dz < val :					print(1, f)				else :					print(0, f)					if __name__ == "__main__" :	if not sys.argv[1:] :		inner = 10		outer = 35	else :		inner=float(sys.argv[1])		outer=float(sys.argv[2])			dims = (100, 100, 100)	with open('vox.txt', mode='w') as f:		fSphere(dims, f, inRad=inner, outRad=outer)		#~ print(inner, outer)		#~ sphere(dims, f, rad=outer)